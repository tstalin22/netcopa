{% if 'router' in vars and 'bgp' in vars['router'] %}
{% for process_id, process in vars['router']['bgp'].iteritems() %}
- parents:
  - router bgp {{ process['process_id'] }}
  lines:
{#  ############################################## synchronization #}
{% if 'synchronization' in process %}
{% if not process['synchronization'] %}
  - " no synchronization"
{% endif %}
{% endif %}
{#  ############################################## router_id #}
{% if 'router_id' in process %}
  - " bgp router-id {{ process['router_id'] }}"
{% endif %}
{#  ############################################## log_neighbor_changes #}
{% if 'log_neighbor_changes' in process and process['log_neighbor_changes'] %}
  - " bgp log-neighbor-changes"
{% endif %}
{#  ############################################## aggregate_addresses #}
{% if 'aggregate_addresses' in process %}
{% for aggregate_address in process['aggregate_addresses'] %}
{% if 'summary_only' in aggregate_address and aggregate_address['summary_only'] %}
  - " aggregate-address {{ aggregate_address['network'] }} {{ aggregate_address['netmask'] }} summary-only"
{% endif %}
{% endfor %}
{% endif %}
{#  ############################################## redistribute #}
{% if 'redistribute' in process %}
{% for protocol_name in ['connected', 'ospf'] %}
{% if protocol_name in process['redistribute'] %}
{% set protocol = process['redistribute'][protocol_name] %}
{% set line = [] %}
{% set _ = line.append('redistribute') %}
{% set _ = line.append(protocol['protocol']) %}
{% if 'process_id' in protocol %}
{% set _ = line.append(protocol['process_id']) %}
{% endif %}{# process_id #}
{% if 'match' in protocol %}
{% set _ = line.append('match') %}
{% set _ = line.append(protocol['match']|join(' ')) %}
{% endif %}{# match #}
{% if 'route_map' in protocol %}
{% set _ = line.append('route-map') %}
{% set _ = line.append(protocol['route_map']) %}
{% endif %}{# route-map #}
  - " {{ line|join(' ') }}"
{% endif %}{# protocol #}
{% endfor %}{# protocols #}
{% endif %}{# redistribute #}
{#  ############################################## neighbors #}
{% if 'neighbors' in process %}
{% for neighbor_id, neighbor in process['neighbors']|sort_by_ip_as_int() %}
{% if 'remote_as' in neighbor %}
  - " neighbor {{ neighbor['ipv4_address'] }} remote-as {{ neighbor['remote_as'] }}"
{% endif %}{# remote_as #}
{% if 'description' in neighbor %}
  - " neighbor {{ neighbor['ipv4_address'] }} description {{ neighbor['description'] }}"
{% endif %}{# description #}
{% if 'next_hop_self' in neighbor and neighbor['next_hop_self']%}
  - " neighbor {{ neighbor['ipv4_address'] }} next-hop-self"
{% endif %}{# next-hop-self #}
{% if 'default_originate' in neighbor and 'enabled' in neighbor['default_originate'] and neighbor['default_originate']['enabled'] %}
{% if 'route_map' in neighbor['default_originate'] %}
  - " neighbor {{ neighbor['ipv4_address'] }} default-originate route-map {{ neighbor['default_originate']['route_map'] }}"
{% else %}
  - " neighbor {{ neighbor['ipv4_address'] }} default-originate"
{% endif %}{# route_map #}
{% endif %}{# default_originate #}
{% if 'soft_reconfiguration_inbound' in neighbor and neighbor['soft_reconfiguration_inbound']%}
  - " neighbor {{ value['ipv4_address'] }} soft-reconfiguration inbound"
{% endif %}{# soft_reconfiguration_inbound #}
{% if 'route_map_in' in neighbor %}
  - " neighbor {{ neighbor['ipv4_address'] }} route-map {{ neighbor['route_map_in']}} in"
{% endif %}{# route_map_in #}
{% if 'route_map_out' in neighbor %}
  - " neighbor {{ neighbor['ipv4_address'] }} route-map {{ neighbor['route_map_out']}} out"
{% endif %}{# route_map_out #}
{% endfor %}{# neighbors #}
{% endif %}{# neighbors #}
{#  ############################################## auto_summary #}
{% if 'auto_summary' in process and not process['auto_summary'] %}
  - " no auto-summary"
{% endif %}{# auto_summary #}
{#  ############################################## distance #}
{% if 'distance' in process %}
  - " distance {{ process['distance'] }}"
{% endif %}{# distance #}
  - " !"
{# -------------ADDRESS FAMILIES BEGIN---------------- #}
{% if 'address_families' in process %}
{% for ip_version, address_family in process['address_families'].iteritems() %}
  - " address-family {{ address_family['ip_version'] }}"
{#  ############################################## aggregate_addresses #}
{% if 'aggregate_addresses' in address_family %}
{% for aggregate_address in address_family['aggregate_addresses'] %}
{% if 'summary_only' in aggregate_address and aggregate_address['summary_only'] %}
  - "  aggregate-address {{ aggregate_address['network'] }} {{ aggregate_address['netmask'] }} summary-only"
{% endif %}{# summary-only #}
{% endfor %}{# aggregate-address #}
{% endif %}{# aggregate_addresses #}
{#  ############################################## redistribute #}
{% if 'redistribute' in address_family %}
{% for protocol_name in ['connected', 'ospf'] %}
{% if protocol_name in address_family['redistribute'] %}
{% set protocol = address_family['redistribute'][protocol_name] %}
{% set line = [] %}
{% set _ = line.append('redistribute') %}
{% set _ = line.append(protocol['protocol']) %}
{% if 'process_id' in protocol[protocol] %}
{% set _ = line.append(protocol['process_id']) %}
{% endif %}{# process_id #}
{% if 'match' in protocol %}
{% set _ = line.append('match') %}
{% set _ = line.append(protocol['match']|join(' ')) %}
{% endif %}{# match #}
{% if 'route_map' in protocol %}
{% set _ = line.append('route-map') %}
{% set _ = line.append(protocol['route_map']) %}
{% endif %}{# route-map #}
  - "  {{ line|join(' ') }}"
{% endif %}{# protocol #}
{% endfor %}{# protocols #}
{% endif %}{# redistribute #}
{#  ############################################## neighbors #}
{% if 'neighbors' in address_family %}
{% for neighbor_id, neighbor in address_family['neighbors']|sort_by_ip_as_int() %}
{#  ############################################## activate #}
{% if 'activate' in neighbor and neighbor['activate'] %}
  - "  neighbor {{ neighbor_id }} activate"
{% endif %}
{#  ############################################## soft-reconfiguration #}
{% if 'soft_reconfiguration_inbound' in neighbor and neighbor['soft_reconfiguration_inbound'] %}
  - "  neighbor {{ neighbor_id }} soft-reconfiguration inbound"
{% endif %}
{#  ############################################## route-map #}
{% if 'route_map_in' in neighbor %}
  - "  neighbor {{ neighbor_id }} route-map {{ neighbor['route_map_in']}} in"
{% endif %}{# route_map_in #}
{% if 'route_map_out' in neighbor %}
  - "  neighbor {{ neighbor_id }} route-map {{ neighbor['route_map_out']}} out"
{% endif %}{# route_map_out #}
{% endfor %}
{% endif %}
{% endfor %}{# ip_version #}
  - " exit-address-family"
{% endif %}{# address_families #}
{% endfor %}{# process #}
{% endif %}{# router #}
